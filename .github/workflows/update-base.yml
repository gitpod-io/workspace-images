name: Update base image base

on:
  workflow_dispatch:
  schedule:
    # Every Thursday at midnight
    - cron: "0 0 * * THU"

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3

      - name: Set git identity
        run: |
          git config --global user.name $GITHUB_USER
          git config --global user.email $GITHUB_EMAIL
        env:
          GITHUB_USER: roboquat
          GITHUB_EMAIL: roboquat@gitpod.io

      - uses: imjasonh/setup-crane@v0.3

      - name: Check if an update is available
        shell: bash
        run: |
          file="$(pwd)/base/Dockerfile"
          images=$(grep -i -E '[a-z0-9]+([._-][a-z0-9]+)*(/[a-z0-9]+([._-][a-z0-9]+)*)*@sha256:[a-z0-9]+' "$file" | cut -d @ -f1 | rev | cut -d ' ' -f1 | cut -d '"' -f1 | rev | sed -e "s/^docker:\/\///" | tr '\n' ',' || true)
          digests=$(grep -i -E '[a-z0-9]+([._-][a-z0-9]+)*(/[a-z0-9]+([._-][a-z0-9]+)*)*@sha256:[a-z0-9]+' "$file" | cut -d @ -f2 | cut -d ' ' -f1 | cut -d '"' -f1 | tr '\n' ',' || true)
          IFS=',' read -r -a images2 <<< "$images"
          IFS=',' read -r -a digests2 <<< "$digests"

          if [ -n "$images" ]; then
              for i in "${!images2[@]}"; do
                if [[ ${images2[i]} != *":"* ]]; then
                  echo "Image ${images2[i]} in file $file does not have a tag, ignoring..."
                  continue
                fi
                if [[ ${images2[i]} == *\.local:* ]]; then
                  echo "Skipping local registry image ${images2[i]}"
                  continue
                fi
                echo "Processing ${images2[i]} in file $file"
                updated_digest=$(crane digest "${images2[i]}")
                if [ "$updated_digest" != "${digests2[i]}" ] && [ -n "$updated_digest" ]; then
                  echo "Digest ${digests2[i]} for image ${images2[i]} is different, new digest is $updated_digest, updating..."
                  sed -i -e "s/${digests2[i]}/$updated_digest/g" "$file"
                else
                  echo "Digest for image ${images2[i]} is up-to-date."
                fi
              done
          fi

      - name: Check workspace
        id: create_pr
        shell: bash
        run: |
          if [[ $(git diff --stat) != '' ]]; then
            echo "create_pr=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38 # v5.0.2
        if: ${{ steps.create_pr.outputs.create_pr == 'true' }}
        with:
          token: ${{ secrets.ROBOQUAT_PR_TOKEN }}
          commit-message: update index
          title: "Update base image digest"
          body: "Updating the base image's base image"
          branch: update-digests
          delete-branch: true
